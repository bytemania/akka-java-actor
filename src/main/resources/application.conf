
example-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
        fixed-pool-size = 32
    }
}

fork-join-pool-dispatcher {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher
    # What kind of ExecutionService to use
    executor = "fork-join-executor"
    # Configuration for the fork join pool
    fork-join-executor {
        # Min number of threads to cap factor-based parallelism number
        parallelism-min = 2
        # Parallelism (threads) ... ceil (available processors * factor)
        parallelism-factor = 2.0
        # Max number of threads to cap factor-based parallelism number to parallelism-max = 10;
        parallelism-max = 10
    }
    # Throughput defines the maximum number of messages to be processed per actor before per actor before the thread
    # jumps to the next actor
    # Set to 1 for as fair as possible
    throughput = 100
}

blocking-io-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
        fixed-pool-size = 32
    }
    throughput = 1
}

number-cores-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
        # minimum number of threads to cap factor-based core number to
        core-pool-size-min = 2
        # no of core threads ... ceil(available processors * factor)
        core-pool-size-factor = 2.0
        # maximum number of threads to cap factor-base number to
        core-pool-size-max = 10
    }
    throughput = 100
}

pinned-dispatcher {
    executor = "thread-pool-executor"
    type = PinnedDispatcher
}

pool-timeouts-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
        fixed-pool-size = 16
        # Keep-alive-time for threads
        keep-alive-time = 60s
        # allow core threads to timeout
        allow-core-timeout = off
    }
    # How long time the dispatcher will wait for new actors until it shuts down
    shutdown-timeout = 60s
}

my-custom-mailbox {
    mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
}

custom-dispatcher-mailbox {
    mailbox-requirement = "org.example.actor.mailbox.MyUnboundedMailbox"
}
